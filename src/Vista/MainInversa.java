/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Class.mInversaClass;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ricardo Zaldumbide
 */
public class MainInversa extends javax.swing.JFrame {

    /**
     * Creates new form MainInversa
     */
    public MainInversa() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatrizinicial = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblM2 = new javax.swing.JTable();
        txtTamañoMatriz = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bttnInversa = new javax.swing.JButton();
        bttnMatriz = new javax.swing.JButton();
        lbldeterminante = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabelfondo = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bienvenid@ usuario, este programa calcula la inversa de una matriz cuadrada.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, 30));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Matriz inversa.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, 30));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ingrese los datos en esta matriz");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 200, 30));

        tblMatrizinicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblMatrizinicial);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 410, 210));

        tblM2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblM2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, -1, 210));

        txtTamañoMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTamañoMatrizActionPerformed(evt);
            }
        });
        getContentPane().add(txtTamañoMatriz, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 80, 30));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ingrese el orden de la matriz:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, 30));

        bttnInversa.setBackground(new java.awt.Color(204, 204, 204));
        bttnInversa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bttnInversa.setText("Generar matriz inversa.");
        bttnInversa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bttnInversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnInversaActionPerformed(evt);
            }
        });
        getContentPane().add(bttnInversa, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, -1, 30));

        bttnMatriz.setBackground(new java.awt.Color(204, 204, 204));
        bttnMatriz.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bttnMatriz.setText("Generar matriz");
        bttnMatriz.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bttnMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnMatrizActionPerformed(evt);
            }
        });
        getContentPane().add(bttnMatriz, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, 30));

        lbldeterminante.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        lbldeterminante.setForeground(new java.awt.Color(255, 255, 255));
        lbldeterminante.setText("El determinante de su matriz es:");
        getContentPane().add(lbldeterminante, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 370, 30));

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, -1, -1));

        jLabelfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo1.jpg"))); // NOI18N
        getContentPane().add(jLabelfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1070, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTamañoMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTamañoMatrizActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTamañoMatrizActionPerformed

    private void bttnInversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnInversaActionPerformed
        double determinante, div;
        int tam;
        int matrizA[][], matrizAdj[][];
        double matrizIn[][];
        String avi;
        mInversaClass inv = new mInversaClass();
        tam=Integer.parseInt(txtTamañoMatriz.getText());

        try{
            DefaultTableModel modelo1=(DefaultTableModel) tblMatrizinicial.getModel();
            DefaultTableModel modelo2=(DefaultTableModel) tblM2.getModel();
            modelo1.setColumnCount(tam);
            modelo1.setRowCount(tam);
            modelo2.setColumnCount(tam);
            modelo2.setRowCount(tam);
            
            matrizA=new int[tam][tam];
            matrizIn=new double[tam][tam];
            matrizAdj=new int[tam][tam];

            for(int i=0; i<tam; i++){
                for(int j=0; j<tam; j++){
                    avi=(String) tblMatrizinicial.getValueAt(i, j);
                    matrizA[i][j]=Integer.parseInt(avi);
                }
            }
            determinante=inv.determinanteMatriz(matrizA, tam);
           
            if(determinante==0){
                JOptionPane.showMessageDialog(null, "Su matriz no tiene inversa.");
                txtTamañoMatriz.setText("");
                modelo1.getDataVector().removeAllElements();
                tblMatrizinicial.updateUI();
            }else{
                div=1/determinante;
                switch (tam) {
                    case 1:
                        for(int i=0; i<tam; i++){
                            for(int j=0; j<tam; j++){
                                matrizIn[i][j]=div;
                            }
                        }       break;
                    case 2:
                        for(int i=0; i<tam; i++){
                            for(int j=0; j<tam; j++){
                                matrizIn[i][j]=div*inv.adj(matrizA, i, j);
                            }
                        }   break;
                    default:
                        for(int i=0;i<tam;i++){
                            for(int j=0;j<tam;j++){
                                matrizIn[i][j]=div*inv.adj(matrizA, i, j);
                            }
                        }   break;     
                }
                
                    for(int i=0; i<tam; i++){ 
                        for(int j=0; j<tam; j++){
                            tblM2.setValueAt(matrizIn[j][i], i, j);
                        }
                    } 
            }
            lbldeterminante.setText("El determinante de su matriz es: "+String.valueOf(inv.determinanteMatriz(matrizA, tam)));
        }catch(Exception e){
            tam=Integer.parseInt(txtTamañoMatriz.getText());
            DefaultTableModel modelo1=(DefaultTableModel) tblMatrizinicial.getModel();
            modelo1.setColumnCount(tam);
            modelo1.setRowCount(tam);
            JOptionPane.showMessageDialog(null, "Datos inválidos.");
            txtTamañoMatriz.setText("");
            modelo1.getDataVector().removeAllElements();
            tblMatrizinicial.updateUI();
        }
        
    }//GEN-LAST:event_bttnInversaActionPerformed

    private void bttnMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnMatrizActionPerformed
        int tam;
        try{
            tam=Integer.parseInt(txtTamañoMatriz.getText());
            if(tam>=1){
                DefaultTableModel modelo1=(DefaultTableModel) tblMatrizinicial.getModel();
                modelo1.setColumnCount(tam);
                modelo1.setRowCount(tam);    
            }else{
                JOptionPane.showMessageDialog(null, "El tamaño de su matriz debe ser mayor a 0.");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Datos inválidos");
        }
    }//GEN-LAST:event_bttnMatrizActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo1=(DefaultTableModel) tblMatrizinicial.getModel();
        DefaultTableModel modelo2=(DefaultTableModel) tblM2.getModel();
        txtTamañoMatriz.setText("");
        modelo1.getDataVector().removeAllElements();
        tblMatrizinicial.updateUI();
        modelo2.getDataVector().removeAllElements();
        tblM2.updateUI();
        lbldeterminante.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainInversa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainInversa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainInversa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInversa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainInversa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnInversa;
    private javax.swing.JButton bttnMatriz;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelfondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbldeterminante;
    private javax.swing.JTable tblM2;
    private javax.swing.JTable tblMatrizinicial;
    private javax.swing.JTextField txtTamañoMatriz;
    // End of variables declaration//GEN-END:variables
}
